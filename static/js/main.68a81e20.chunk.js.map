{"version":3,"sources":["algorithms/Calculator/Calculator.rd3.js","components/Player/Player.slice.js","algorithms/ConvexHull/ConvexHull.rd3.js","algorithms/index.js","algorithms/Calculator/Calculator.code.js","algorithms/ConvexHull/ConvexHull.code.js","components/Sidebar/index.js","components/CodeEditor/index.js","components/EditorContainer/index.js","components/Player/index.js","components/VizContainer/index.js","components/App/App.slice.js","components/App/index.js","rootReducer.js","store.js","index.js"],"names":["CalculatorRenderer","props","playerSlice","createSlice","name","initialState","playing","speed","reducers","updateSpeed","state","action","payload","togglePlay","actions","ConvexHullRenderer","d3Container","useRef","useSelector","player","dispatch","useDispatch","useLayoutEffect","data","length","current","svg","d3","attr","p","append","selectAll","join","d","hull","a","remove","h","transition","style","i","visible","slice","includes","Promise","delay","redraw","ref","AlgorithmService","key","algorithmKey","Sidebar","activeAlgorithm","app","algoNames","map","algo","to","CodeEditor","useState","code","setCode","useEffect","className","mode","theme","editorProps","$blockScrolling","value","readOnly","EditorContainer","Player","class","disabled","onClick","icon","faPlay","VizContainer","comp","vertices","setVertices","randomX","offsetWidth","randomY","offsetHeight","React","createElement","appSlice","updateAlgorithm","App","match","params","algorithm","split","defaultSize","allowResize","rootReducer","combineReducers","appReducer","playerReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","basename","process","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.68a81e20.chunk.js","sourcesContent":["import React from 'react';\nimport './Calculator.scss';\n\nfunction CalculatorRenderer(props) {\n\n    return (\n      <p>Calculator</p>\n  );\n}\n\nexport default CalculatorRenderer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst playerSlice = createSlice({\n  name: 'player',\n  initialState: {\n    playing: false,\n    speed: 1,\n  },\n  reducers: {\n    updateSpeed(state, action) {\n      state.speed = action.payload;\n    },\n    togglePlay(state, action) {\n      state.playing = !state.playing;\n    }\n  },\n});\n\nexport const { \n  updateSpeed,\n  togglePlay,\n } = playerSlice.actions;\nexport default playerSlice.reducer;\n","import React, { useRef, useLayoutEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as d3 from 'd3';\nimport Promise from 'bluebird';\nimport './ConvexHull.scss';\nimport { togglePlay } from 'components/Player/Player.slice';\n\nfunction ConvexHullRenderer(props) {\n  const d3Container = useRef(null);\n  const { playing } = useSelector(state => state.player);\n  const dispatch = useDispatch();\n\n\n  useLayoutEffect(\n    () => {\n        if (props.data && props.data.length > 0 && d3Container.current) {\n            const svg = d3.select(d3Container.current);\n            svg.attr(\"transform\", \"scale(1,-1)\")\n\n\n            let p = svg\n              .append(\"g\")\n              .selectAll(\"circle\")\n              .data(props.data)\n              .join(\"circle\")\n              .attr(\"r\", 3)\n              .attr(\"cx\", d => d[0])\n              .attr(\"cy\", d => d[1]);\n            \n            let hull = d3.polygonHull(props.data);\n            if (playing) redraw();\n\n            async function redraw() {\n              d3.selectAll(\"path.hull\").remove();\n              let h = svg.append(\"path\")\n              .attr(\"class\", \"hull\");\n\n              h.transition().style(\"fill\", \"#f3f4ed22\");\n\n              for (let i = 2; i <= hull.length; i++) {\n                const visible = hull.slice(0, i);\n                h.attr(\"d\", `M${visible.join(\"L\")}Z`);\n                p.style(\"fill\", d => (visible.includes(d) ? \"orange\" : \"#f4eee8\"));\n                await Promise.delay(300);\n              }\n\n              dispatch(togglePlay());\n            }\n          \n        }\n    }, \n    [props.data, playing, dispatch]);\n\n    return (\n      <svg ref={d3Container} />\n  );\n}\n\nexport default ConvexHullRenderer;\n","import {default as CalculatorRenderer } from './Calculator/Calculator.rd3';\nimport {default as CalculatorCode } from './Calculator/Calculator.code';\nimport {default as ConvexHullRenderer } from './ConvexHull/ConvexHull.rd3';\nimport {default as ConvexHullCode } from './ConvexHull/ConvexHull.code';\n\nexport const AlgorithmService = {\n\n  listAlgoNames: () => {\n    return [\n      {\n        key: 'calculator',\n        name: 'Calculator'\n      },\n      {\n        key: 'convex-hull',\n        name: 'Convex Hull'\n      },\n    ];\n  },\n  getAlgoCode: (algorithmKey) => {\n    const mapping = {\n      'calculator': CalculatorCode,\n      'convex-hull': ConvexHullCode,\n    };\n\n    return mapping[algorithmKey];\n  },\n  getAlgoRenderer: (algorithmKey) => {\n    const mapping = {\n      'calculator': CalculatorRenderer,\n      'convex-hull': ConvexHullRenderer,\n    };\n\n    return mapping[algorithmKey];\n  },\n\n};\n","const ConvexHull = `import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.stream.Collectors;\n \nimport static java.util.Collections.emptyList;\n \npublic class Calculator {\n    public static void main(String[] args) {\n        System.out.println('Hello World');\n    }\n\n}`;\n\nexport default ConvexHull;\n","const ConvexHull = `import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.stream.Collectors;\n \nimport static java.util.Collections.emptyList;\n \npublic class ConvexHull {\n    private static class Point implements Comparable<Point> {\n        private int x, y;\n \n        public Point(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n \n        @Override\n        public int compareTo(Point o) {\n            return Integer.compare(x, o.x);\n        }\n \n        @Override\n        public String toString() {\n            return String.format(\"(%d, %d)\", x, y);\n        }\n    }\n \n    private static List<Point> convexHull(List<Point> p) {\n        if (p.isEmpty()) return emptyList();\n        p.sort(Point::compareTo);\n        List<Point> h = new ArrayList<>();\n \n        // lower hull\n        for (Point pt : p) {\n            while (h.size() >= 2 && !ccw(h.get(h.size() - 2), h.get(h.size() - 1), pt)) {\n                h.remove(h.size() - 1);\n            }\n            h.add(pt);\n        }\n \n        // upper hull\n        int t = h.size() + 1;\n        for (int i = p.size() - 1; i >= 0; i--) {\n            Point pt = p.get(i);\n            while (h.size() >= t && !ccw(h.get(h.size() - 2), h.get(h.size() - 1), pt)) {\n                h.remove(h.size() - 1);\n            }\n            h.add(pt);\n        }\n \n        h.remove(h.size() - 1);\n        return h;\n    }\n \n    // ccw returns true if the three points make a counter-clockwise turn\n    private static boolean ccw(Point a, Point b, Point c) {\n        return ((b.x - a.x) * (c.y - a.y)) > ((b.y - a.y) * (c.x - a.x));\n    }\n}`;\n\nexport default ConvexHull;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AlgorithmService } from 'algorithms';\n\nfunction Sidebar() {\n  const { activeAlgorithm } = useSelector(state => state.app);\n  const algoNames = AlgorithmService.listAlgoNames();\n  \n  return (\n    <div>\n      <h1>\n        { activeAlgorithm }\n      </h1>\n      <ul>\n        {\n          algoNames.map(algo => <li key={algo.key}><Link to={`/${algo.key}`}>{algo.name}</Link></li>)\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport AceEditor from \"react-ace\";\nimport './CodeEditor.scss';\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { AlgorithmService } from 'algorithms';\n\nfunction CodeEditor() {\n  const { activeAlgorithm } = useSelector(state => state.app);\n  const [code, setCode] = useState('');\n\n  useEffect(() => {\n    setCode(AlgorithmService.getAlgoCode(activeAlgorithm));\n  }, [activeAlgorithm]);\n\n  return (\n    <div className=\"code-editor\">\n      <AceEditor\n        mode=\"java\"\n        theme=\"monokai\"\n        name=\"code-editor\"\n        editorProps={{ $blockScrolling: true }}\n        value={code}\n        readOnly={true}\n      />\n    </div>\n  );\n}\n\nexport default CodeEditor;\n","import React from 'react';\nimport CodeEditor from 'components/CodeEditor';\nimport './EditorContainer.scss'\n\nfunction EditorContainer() {\n  return (\n    <div className=\"editor-container\">\n      <div className=\"content\">\n        <CodeEditor />\n      </div>\n    </div>\n  );\n}\n\nexport default EditorContainer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { togglePlay } from './Player.slice';\nimport './Player.scss';\n\nconst Player = () => {\n  const dispatch = useDispatch();\n  const { playing } = useSelector(state => state.player);\n\n  const togglePlayStatus = () => {\n    dispatch(togglePlay());\n  };\n\n  return (\n    <div className=\"player-container\">\n      {\n        playing ? (\n          <button class=\"btn btn-playing\" disabled={playing}>\n            Playing\n          </button>\n        ) : (\n          <button class=\"btn btn-play\" onClick={togglePlayStatus}>\n            <FontAwesomeIcon icon={faPlay} />\n            Play\n          </button>\n        )\n      }\n      \n    </div>\n  );\n}\n\nexport default Player;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as d3 from 'd3';\nimport { AlgorithmService } from 'algorithms';\nimport Player from 'components/Player';\n\nfunction VizContainer() {\n  const { activeAlgorithm } = useSelector(state => state.app);\n  const comp = AlgorithmService.getAlgoRenderer(activeAlgorithm);\n  const ref = useRef(null);\n  const [vertices, setVertices] = useState([]);\n\n  useEffect(() => {\n    if (ref.current) {\n      const randomX = d3.randomInt(ref.current.offsetWidth - 10);\n      const randomY = d3.randomInt(ref.current.offsetHeight - 20);\n      setVertices(d3.range(25).map(function () { return [randomX() + 10, randomY() + 20]; }));\n    }\n  }, []);\n\n  return (\n    <div className=\"viz-container\" ref={ref}>\n      <Player />\n      { comp && React.createElement(comp, {data: vertices,})}\n    </div>\n  );\n}\n\nexport default VizContainer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    activeAlgorithm: null,\n  },\n  reducers: {\n    updateAlgorithm(state, action) {\n      state.activeAlgorithm = action.payload;\n    },\n  },\n});\n\nexport const { updateAlgorithm } = appSlice.actions;\nexport default appSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { Sidebar, EditorContainer, VizContainer } from 'components';\nimport SplitPane from \"react-split-pane\";\nimport { updateAlgorithm } from 'components/App/App.slice';\nimport './App.scss';\n\nfunction App(props) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (props.match.params.algorithm) {\n      dispatch(updateAlgorithm(props.match.params.algorithm));\n    }\n  }, [props, dispatch]);\n  \n  return (\n    <div className=\"App\">\n      <SplitPane split=\"vertical\" defaultSize=\"15%\" allowResize={false}>\n        <Sidebar />\n        <SplitPane split=\"vertical\" defaultSize=\"50%\">\n          <EditorContainer />\n          <VizContainer />\n        </SplitPane>\n      </SplitPane>  \n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport appReducer from 'components/App/App.slice';\nimport playerReducer from 'components/Player/Player.slice';\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  player: playerReducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from 'components/App';\nimport store from './store';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/:algorithm\" component={App}/>\n          <Route path=\"/\" component={App}/>\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}